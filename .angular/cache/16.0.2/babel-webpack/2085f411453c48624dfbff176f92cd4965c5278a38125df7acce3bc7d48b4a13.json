{"ast":null,"code":"import { Cliente } from '../modelo/Cliente';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ClientecService {\n  //construtor\n  constructor(http) {\n    this.http = http;\n    // Url da API\n    this.url = 'http://localhost:8080';\n  }\n  //Método para selecionar todos os clientes\n  selecionar() {\n    return this.http.get(this.url);\n  }\n  //Método para cadastrar clientes\n  cadastrar(obj) {\n    return this.http.post(this.url, obj);\n  }\n  // Método para editar clientes\n  editar() {\n    this.servico.editar(this.cliente).subscribe(retorno => {\n      // Obter posiçao do vetor onde está o cliente\n      let posicao = this.clientes.findIndex(obj => {\n        return obj.codigo == retorno.codigo;\n      });\n      // Alterar os dados do cliente no vetor\n      this.clientes[posicao] = retorno;\n      // Limpar formulário\n      this.cliente = new Cliente();\n      // Visibilidade dos botões\n      this.btnCadastro = true;\n      // Visibilidade da tabela\n      this.tabela = true;\n      // Mensagem\n      alert('Cliente alterado com sucesso!');\n    });\n  }\n}\nClientecService.ɵfac = function ClientecService_Factory(t) {\n  return new (t || ClientecService)(i0.ɵɵinject(i1.HttpClient));\n};\nClientecService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClientecService,\n  factory: ClientecService.ɵfac,\n  providedIn: 'root'\n});\nexport { ClientecService };","map":{"version":3,"names":["Cliente","ClientecService","constructor","http","url","selecionar","get","cadastrar","obj","post","editar","servico","cliente","subscribe","retorno","posicao","clientes","findIndex","codigo","btnCadastro","tabela","alert","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\João Vitor\\Documents\\Projeto Angular-SpringBoot\\api-front\\src\\app\\servico\\clientec.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\"\nimport { Observable } from 'rxjs';\nimport { Cliente } from '../modelo/Cliente';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientecService {\n\n  // Url da API\n  private url:string = 'http://localhost:8080';\n\n  //construtor\n  constructor(private http:HttpClient) { }\n\n  //Método para selecionar todos os clientes\n  selecionar():Observable<Cliente[]>{\n    return this.http.get<Cliente[]>(this.url);\n  }\n\n  //Método para cadastrar clientes\n  cadastrar(obj:Cliente):Observable<Cliente>{\n    return this.http.post<Cliente>(this.url, obj);\n  }\n\n      // Método para editar clientes\n      editar():void{\n\n        this.servico.editar(this.cliente)\n        .subscribe(retorno => {\n  \n          // Obter posiçao do vetor onde está o cliente\n          let posicao = this.clientes.findIndex(obj => {\n            return obj.codigo == retorno.codigo;\n          });\n  \n          // Alterar os dados do cliente no vetor\n          this.clientes[posicao] = retorno;\n  \n          // Limpar formulário\n          this.cliente = new Cliente();\n  \n          // Visibilidade dos botões\n          this.btnCadastro = true;\n  \n          // Visibilidade da tabela\n          this.tabela = true;\n  \n          // Mensagem\n          alert('Cliente alterado com sucesso!');\n  \n        });\n  \n      }\n\n}\n"],"mappings":"AAGA,SAASA,OAAO,QAAQ,mBAAmB;;;AAE3C,MAGaC,eAAe;EAK1B;EACAC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAJxB;IACQ,KAAAC,GAAG,GAAU,uBAAuB;EAGL;EAEvC;EACAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,GAAG,CAAC;EAC3C;EAEA;EACAG,SAASA,CAACC,GAAW;IACnB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,IAAI,CAACL,GAAG,EAAEI,GAAG,CAAC;EAC/C;EAEI;EACAE,MAAMA,CAAA;IAEJ,IAAI,CAACC,OAAO,CAACD,MAAM,CAAC,IAAI,CAACE,OAAO,CAAC,CAChCC,SAAS,CAACC,OAAO,IAAG;MAEnB;MACA,IAAIC,OAAO,GAAG,IAAI,CAACC,QAAQ,CAACC,SAAS,CAACT,GAAG,IAAG;QAC1C,OAAOA,GAAG,CAACU,MAAM,IAAIJ,OAAO,CAACI,MAAM;MACrC,CAAC,CAAC;MAEF;MACA,IAAI,CAACF,QAAQ,CAACD,OAAO,CAAC,GAAGD,OAAO;MAEhC;MACA,IAAI,CAACF,OAAO,GAAG,IAAIZ,OAAO,EAAE;MAE5B;MACA,IAAI,CAACmB,WAAW,GAAG,IAAI;MAEvB;MACA,IAAI,CAACC,MAAM,GAAG,IAAI;MAElB;MACAC,KAAK,CAAC,+BAA+B,CAAC;IAExC,CAAC,CAAC;EAEJ;;AA9COpB,eAAe,C;mBAAfA,eAAe,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfxB,eAAe,C;SAAfA,eAAe;EAAAyB,OAAA,EAAfzB,eAAe,CAAA0B,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEP3B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}